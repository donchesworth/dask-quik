name: ci

on:
  push:
    branches:
      - 'main'
    tags:
      - '**'

jobs:
  docker_build:
    if: "!contains(github.event.commits[0].message, '[skip ci]')"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/donchesworth/dask-quik-test:latest
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}          
      # - 
      #     name: Run container
      #     uses: addnab/docker-run-action@v2
      #     with:
      #       image: donchesworth/dask-quik-test:latest
      #       run: /opt/dq/entrypoint.sh
  container_run:
    runs-on: ubuntu-latest
    needs: docker_build
    container: ghcr.io/donchesworth/dask-quik-test:latest
    steps:
      - name: Run container
        run: |
          pytest
          bash /opt/dq/entrypoint.sh      
      # - 
      #   name: Test with pytest
      #   run: docker run -it dask-quik-test:latest
      # - 
      #   name: Upload codecov
      #   uses: codecov/codecov-action@v1
      #   with:
      #     fail_ci_if_error: false
      #     verbose: true
  pypi_publish:
    runs-on: ubuntu-latest
    needs: [docker_build, container_run]
    steps: 
      - name: Publish package
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          verbose: true